[build-system]
requires = ["uv_build>=0.7.8,<0.9.0"]
build-backend = "uv_build"

[project]
name = "Package_name"
version = "0.1.0"
description = "Environment template for a package named data-tools."
readme = "README.md"
authors = [
    { name = "Michael Steffen", email = "miyels@proton.me" }
]
license = { text = "MIT" }
requires-python = ">=3.12"

packages = [
	"src/package_name"
]

include = [
    "/data"
]

# Metadata for PyPI
keywords = ["data science", "geospatial", "pandas", "numpy", "scikit-learn"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering"
]

# Main dependencies
dependencies = [
    "numpy>=1.26.2",
    "pandas>=2.1.0",
    "seaborn>=0.12.2",
    "scikit-learn>=1.5.0",
    "geopandas>=1.0.0",
    "tqdm>=4.65.0",
    "rasterio>=1.3.8",
    "xarray>=2025.8.0",
]

[project.urls]
"Source Code" = "https://github.com/msmiyels/template-package_data_tools"
"Bug Tracker" = "https://github.com/msmiyels/template-package_data_tools/issues"

[project.optional-dependencies]

visualization = [
    "plotly>=6.3.0",
    "kaleido>=1.1.0"
]

notebook = [
    "notebook>=7.0.0",
    "ipykernel>=6.0.0",
]

image = [
    "opencv-python>=4.0.0",
    "Pillow>=11.0.0",
]

parsing = [
    "lxml>=5.0.0",
]

machine-learning = [
    "xgboost>=3.0.5",
    "tensorflow>=2.18.0",
    "tensorflow-probability>=0.25.0"
    "imbalanced-learn>=0.11.0",
]

dev = [
	"ruff>=0.12.11",
    "pytest>=8.4.0",
    "pre-commit>=4.3.0",
]

# Nested groups
all = [
    "package_name[visualization,notebook,image,parsing,machine-learning,dev]",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
# "E", "F":	defaults for flake8
# "I":		activates import sorting from isort
# "UP":		activates pyupgrade rules
select = ["E", "F", "I", "UP"]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "double"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]

# -v:   verbose mode
# -s:   output of print() statements during test
addopts = "-v -s"

python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"

cache_dir = ".pytest_cache"